name: Release

on:
  push:
    tags:
    - '*'

jobs:
  multi:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./ninjam/server/Dockerfile
        platforms: linux/amd64,linux/arm/v7
        push: true
        tags: |
          zeppelinux/ninjam-server:${{ github.ref }}
    - name: make
      run: make
      working-directory: ./ninjam/server
    - name: target
      run: mkdir target
      working-directory: ./ninjam/server
    - name: copy-ninjamsrv
      run: cp ninjamsrv ./target/
      working-directory: ./ninjam/server
    - name: copy-cfg
      run: cp example.cfg ./target/config.cfg
      working-directory: ./ninjam/server
    - name: copy-licence
      run: cp cclicense.txt ./target/cclicense.txt
      working-directory: ./ninjam/server
    - name: tar-gz
      run: tar -czvf ninjam.tar.gz -C target .
      working-directory: ./ninjam/server/
    - uses: actions/upload-artifact@v1
      with:
        name: ninjamsrv
        path: ./ninjam/server/target
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ninjam/server/ninjam.tar.gz
        asset_name: ninjam.tar.gz
        asset_content_type: application/zip
